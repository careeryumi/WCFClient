//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ClientApplication.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Genre", Namespace="http://schemas.datacontract.org/2004/07/LMSServices")]
    [System.SerializableAttribute()]
    public partial class Genre : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int GenreIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GenreNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ClientApplication.ServiceReference1.Music[] MusicsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int GenreID {
            get {
                return this.GenreIDField;
            }
            set {
                if ((this.GenreIDField.Equals(value) != true)) {
                    this.GenreIDField = value;
                    this.RaisePropertyChanged("GenreID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GenreName {
            get {
                return this.GenreNameField;
            }
            set {
                if ((object.ReferenceEquals(this.GenreNameField, value) != true)) {
                    this.GenreNameField = value;
                    this.RaisePropertyChanged("GenreName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ClientApplication.ServiceReference1.Music[] Musics {
            get {
                return this.MusicsField;
            }
            set {
                if ((object.ReferenceEquals(this.MusicsField, value) != true)) {
                    this.MusicsField = value;
                    this.RaisePropertyChanged("Musics");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Music", Namespace="http://schemas.datacontract.org/2004/07/LMSServices")]
    [System.SerializableAttribute()]
    public partial class Music : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ClientApplication.ServiceReference1.Genre GenreField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> GenreIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MusicIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MusicNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ClientApplication.ServiceReference1.Genre Genre {
            get {
                return this.GenreField;
            }
            set {
                if ((object.ReferenceEquals(this.GenreField, value) != true)) {
                    this.GenreField = value;
                    this.RaisePropertyChanged("Genre");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> GenreID {
            get {
                return this.GenreIDField;
            }
            set {
                if ((this.GenreIDField.Equals(value) != true)) {
                    this.GenreIDField = value;
                    this.RaisePropertyChanged("GenreID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MusicID {
            get {
                return this.MusicIDField;
            }
            set {
                if ((this.MusicIDField.Equals(value) != true)) {
                    this.MusicIDField = value;
                    this.RaisePropertyChanged("MusicID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MusicName {
            get {
                return this.MusicNameField;
            }
            set {
                if ((object.ReferenceEquals(this.MusicNameField, value) != true)) {
                    this.MusicNameField = value;
                    this.RaisePropertyChanged("MusicName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.ILMSServices")]
    public interface ILMSServices {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILMSServices/GetMessage", ReplyAction="http://tempuri.org/ILMSServices/GetMessageResponse")]
        string GetMessage(string StudentName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILMSServices/GetMessage", ReplyAction="http://tempuri.org/ILMSServices/GetMessageResponse")]
        System.Threading.Tasks.Task<string> GetMessageAsync(string StudentName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILMSServices/Hello", ReplyAction="http://tempuri.org/ILMSServices/HelloResponse")]
        string Hello();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILMSServices/Hello", ReplyAction="http://tempuri.org/ILMSServices/HelloResponse")]
        System.Threading.Tasks.Task<string> HelloAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILMSServices/GetAllGenre", ReplyAction="http://tempuri.org/ILMSServices/GetAllGenreResponse")]
        ClientApplication.ServiceReference1.Genre[] GetAllGenre();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILMSServices/GetAllGenre", ReplyAction="http://tempuri.org/ILMSServices/GetAllGenreResponse")]
        System.Threading.Tasks.Task<ClientApplication.ServiceReference1.Genre[]> GetAllGenreAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILMSServices/GetGenre", ReplyAction="http://tempuri.org/ILMSServices/GetGenreResponse")]
        ClientApplication.ServiceReference1.Genre GetGenre(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILMSServices/GetGenre", ReplyAction="http://tempuri.org/ILMSServices/GetGenreResponse")]
        System.Threading.Tasks.Task<ClientApplication.ServiceReference1.Genre> GetGenreAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILMSServices/DeleteGenre", ReplyAction="http://tempuri.org/ILMSServices/DeleteGenreResponse")]
        int DeleteGenre(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILMSServices/DeleteGenre", ReplyAction="http://tempuri.org/ILMSServices/DeleteGenreResponse")]
        System.Threading.Tasks.Task<int> DeleteGenreAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILMSServices/CreateGenre", ReplyAction="http://tempuri.org/ILMSServices/CreateGenreResponse")]
        int CreateGenre(ClientApplication.ServiceReference1.Genre genrePara);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILMSServices/CreateGenre", ReplyAction="http://tempuri.org/ILMSServices/CreateGenreResponse")]
        System.Threading.Tasks.Task<int> CreateGenreAsync(ClientApplication.ServiceReference1.Genre genrePara);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILMSServices/EditGenre", ReplyAction="http://tempuri.org/ILMSServices/EditGenreResponse")]
        int EditGenre(ClientApplication.ServiceReference1.Genre genrePara);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILMSServices/EditGenre", ReplyAction="http://tempuri.org/ILMSServices/EditGenreResponse")]
        System.Threading.Tasks.Task<int> EditGenreAsync(ClientApplication.ServiceReference1.Genre genrePara);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILMSServices/GetAllMusic", ReplyAction="http://tempuri.org/ILMSServices/GetAllMusicResponse")]
        ClientApplication.ServiceReference1.Music[] GetAllMusic();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILMSServices/GetAllMusic", ReplyAction="http://tempuri.org/ILMSServices/GetAllMusicResponse")]
        System.Threading.Tasks.Task<ClientApplication.ServiceReference1.Music[]> GetAllMusicAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILMSServices/GetMusic", ReplyAction="http://tempuri.org/ILMSServices/GetMusicResponse")]
        ClientApplication.ServiceReference1.Music GetMusic(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILMSServices/GetMusic", ReplyAction="http://tempuri.org/ILMSServices/GetMusicResponse")]
        System.Threading.Tasks.Task<ClientApplication.ServiceReference1.Music> GetMusicAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILMSServices/DeleteMusic", ReplyAction="http://tempuri.org/ILMSServices/DeleteMusicResponse")]
        int DeleteMusic(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILMSServices/DeleteMusic", ReplyAction="http://tempuri.org/ILMSServices/DeleteMusicResponse")]
        System.Threading.Tasks.Task<int> DeleteMusicAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILMSServices/CreateMusic", ReplyAction="http://tempuri.org/ILMSServices/CreateMusicResponse")]
        int CreateMusic(ClientApplication.ServiceReference1.Music musicPara);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILMSServices/CreateMusic", ReplyAction="http://tempuri.org/ILMSServices/CreateMusicResponse")]
        System.Threading.Tasks.Task<int> CreateMusicAsync(ClientApplication.ServiceReference1.Music musicPara);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILMSServices/EditMusic", ReplyAction="http://tempuri.org/ILMSServices/EditMusicResponse")]
        int EditMusic(ClientApplication.ServiceReference1.Music musicPara);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILMSServices/EditMusic", ReplyAction="http://tempuri.org/ILMSServices/EditMusicResponse")]
        System.Threading.Tasks.Task<int> EditMusicAsync(ClientApplication.ServiceReference1.Music musicPara);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ILMSServicesChannel : ClientApplication.ServiceReference1.ILMSServices, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class LMSServicesClient : System.ServiceModel.ClientBase<ClientApplication.ServiceReference1.ILMSServices>, ClientApplication.ServiceReference1.ILMSServices {
        
        public LMSServicesClient() {
        }
        
        public LMSServicesClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public LMSServicesClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LMSServicesClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LMSServicesClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string GetMessage(string StudentName) {
            return base.Channel.GetMessage(StudentName);
        }
        
        public System.Threading.Tasks.Task<string> GetMessageAsync(string StudentName) {
            return base.Channel.GetMessageAsync(StudentName);
        }
        
        public string Hello() {
            return base.Channel.Hello();
        }
        
        public System.Threading.Tasks.Task<string> HelloAsync() {
            return base.Channel.HelloAsync();
        }
        
        public ClientApplication.ServiceReference1.Genre[] GetAllGenre() {
            return base.Channel.GetAllGenre();
        }
        
        public System.Threading.Tasks.Task<ClientApplication.ServiceReference1.Genre[]> GetAllGenreAsync() {
            return base.Channel.GetAllGenreAsync();
        }
        
        public ClientApplication.ServiceReference1.Genre GetGenre(int id) {
            return base.Channel.GetGenre(id);
        }
        
        public System.Threading.Tasks.Task<ClientApplication.ServiceReference1.Genre> GetGenreAsync(int id) {
            return base.Channel.GetGenreAsync(id);
        }
        
        public int DeleteGenre(int id) {
            return base.Channel.DeleteGenre(id);
        }
        
        public System.Threading.Tasks.Task<int> DeleteGenreAsync(int id) {
            return base.Channel.DeleteGenreAsync(id);
        }
        
        public int CreateGenre(ClientApplication.ServiceReference1.Genre genrePara) {
            return base.Channel.CreateGenre(genrePara);
        }
        
        public System.Threading.Tasks.Task<int> CreateGenreAsync(ClientApplication.ServiceReference1.Genre genrePara) {
            return base.Channel.CreateGenreAsync(genrePara);
        }
        
        public int EditGenre(ClientApplication.ServiceReference1.Genre genrePara) {
            return base.Channel.EditGenre(genrePara);
        }
        
        public System.Threading.Tasks.Task<int> EditGenreAsync(ClientApplication.ServiceReference1.Genre genrePara) {
            return base.Channel.EditGenreAsync(genrePara);
        }
        
        public ClientApplication.ServiceReference1.Music[] GetAllMusic() {
            return base.Channel.GetAllMusic();
        }
        
        public System.Threading.Tasks.Task<ClientApplication.ServiceReference1.Music[]> GetAllMusicAsync() {
            return base.Channel.GetAllMusicAsync();
        }
        
        public ClientApplication.ServiceReference1.Music GetMusic(int id) {
            return base.Channel.GetMusic(id);
        }
        
        public System.Threading.Tasks.Task<ClientApplication.ServiceReference1.Music> GetMusicAsync(int id) {
            return base.Channel.GetMusicAsync(id);
        }
        
        public int DeleteMusic(int id) {
            return base.Channel.DeleteMusic(id);
        }
        
        public System.Threading.Tasks.Task<int> DeleteMusicAsync(int id) {
            return base.Channel.DeleteMusicAsync(id);
        }
        
        public int CreateMusic(ClientApplication.ServiceReference1.Music musicPara) {
            return base.Channel.CreateMusic(musicPara);
        }
        
        public System.Threading.Tasks.Task<int> CreateMusicAsync(ClientApplication.ServiceReference1.Music musicPara) {
            return base.Channel.CreateMusicAsync(musicPara);
        }
        
        public int EditMusic(ClientApplication.ServiceReference1.Music musicPara) {
            return base.Channel.EditMusic(musicPara);
        }
        
        public System.Threading.Tasks.Task<int> EditMusicAsync(ClientApplication.ServiceReference1.Music musicPara) {
            return base.Channel.EditMusicAsync(musicPara);
        }
    }
}
